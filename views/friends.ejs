<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>الأصدقاء - تطبيق الدردشة</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #075e54;
            --secondary-color: #128c7e;
            --accent-color: #25d366;
            --danger-color: #ff3b30;
            --light-color: #f0f0f0;
            --dark-color: #333;
            --gray-color: #666;
            --white-color: #ffffff;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            background: var(--light-color);
            direction: rtl;
            height: 100vh;
            color: var(--dark-color);
        }

        .app-container {
            max-width: 100%;
            height: 100vh;
            background: var(--white-color);
            display: flex;
            flex-direction: column;
            position: relative;
        }

        /* الهيدر */
        .header {
            background: var(--primary-color);
            color: var(--white-color);
            padding: 15px 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            align-items: center;
            gap: 15px;
            flex: 1;
        }

        .profile-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: 2px solid rgba(255, 255, 255, 0.3);
            object-fit: cover;
            cursor: pointer;
        }

        .header-title {
            flex: 1;
            font-size: 18px;
            font-weight: 500;
        }

        .header-actions {
            display: flex;
            gap: 15px;
            position: relative;
        }

        .header-icon {
            color: var(--white-color);
            font-size: 20px;
            cursor: pointer;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            transition: background-color 0.2s;
        }

        .header-icon:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .notification-badge {
            position: absolute;
            top: -2px;
            left: -2px;
            background: var(--danger-color);
            color: var(--white-color);
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 11px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            border: 2px solid var(--primary-color);
        }

        /* محتوى القائمة */
        .friends-content {
            flex: 1;
            overflow-y: auto;
            background: var(--white-color);
        }

        /* شريط البحث */
        .search-container {
            padding: 15px;
            background: var(--white-color);
            border-bottom: 1px solid var(--light-color);
            position: sticky;
            top: 70px;
            z-index: 90;
        }

        .search-box {
            display: flex;
            align-items: center;
            background: var(--light-color);
            border-radius: 20px;
            padding: 8px 15px;
            gap: 10px;
            transition: background-color 0.3s;
        }

        .search-box:focus-within {
            background: #e0e0e0;
        }

        .search-icon {
            color: var(--gray-color);
            font-size: 16px;
        }

        .search-input {
            flex: 1;
            border: none;
            background: transparent;
            outline: none;
            font-size: 14px;
            color: var(--dark-color);
        }

        .search-input::placeholder {
            color: #999;
        }

        /* قائمة الأصدقاء */
        .friends-list {
            list-style: none;
        }

        .friend-item {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            border-bottom: 1px solid var(--light-color);
            cursor: pointer;
            transition: background-color 0.2s ease;
            position: relative;
        }

        .friend-item:hover {
            background-color: #f5f5f5;
        }

        .friend-item:active {
            background-color: #ebebeb;
        }

        .friend-item.unread {
            background-color: rgba(37, 211, 102, 0.05);
        }

        .friend-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-left: 15px;
            object-fit: cover;
            border: 2px solid #e0e0e0;
        }

        .friend-info {
            flex: 1;
            min-width: 0;
        }

        .friend-name {
            font-size: 16px;
            font-weight: 500;
            color: var(--dark-color);
            margin-bottom: 4px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .friend-status {
            font-size: 13px;
            color: var(--gray-color);
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .status-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: var(--accent-color);
        }

        .status-dot.offline {
            background: #9e9e9e;
        }

        .last-seen {
            font-size: 12px;
            color: #999;
        }

        .friend-time {
            font-size: 12px;
            color: var(--gray-color);
            margin-top: 4px;
        }

        .chat-indicator {
            background: var(--accent-color);
            color: var(--white-color);
            border-radius: 50%;
            width: 44px;
            height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            text-decoration: none;
            position: relative;
            transition: transform 0.2s ease, background-color 0.2s;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .chat-indicator:hover {
            transform: scale(1.05);
            background-color: #1fb954;
        }

        .unread-badge {
            position: absolute;
            top: -5px;
            left: -5px;
            background: var(--danger-color);
            color: var(--white-color);
            border-radius: 50%;
            width: 22px;
            height: 22px;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            border: 2px solid var(--white-color);
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        }

        /* حالة فارغة */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--gray-color);
        }

        .empty-icon {
            font-size: 64px;
            margin-bottom: 20px;
            opacity: 0.5;
            color: var(--primary-color);
        }

        .empty-title {
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 10px;
            color: var(--dark-color);
        }

        .empty-description {
            font-size: 14px;
            color: var(--gray-color);
            margin-bottom: 20px;
            line-height: 1.5;
        }

        /* التنقل السفلي */
        .bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: var(--white-color);
            display: flex;
            justify-content: space-around;
            padding: 10px 0;
            border-top: 1px solid #e0e0e0;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
            z-index: 100;
        }

        .nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-decoration: none;
            color: var(--gray-color);
            font-size: 12px;
            padding: 5px;
            flex: 1;
            transition: color 0.3s ease;
            position: relative;
        }

        .nav-item.active {
            color: var(--primary-color);
        }

        .nav-icon {
            font-size: 20px;
            margin-bottom: 3px;
        }

        .nav-text {
            font-size: 11px;
        }

        .nav-badge {
            position: absolute;
            top: 0;
            left: 50%;
            background: var(--danger-color);
            color: var(--white-color);
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        /* تأثيرات للصورة */
        .avatar-container {
            position: relative;
        }

        .online-indicator {
            position: absolute;
            bottom: 2px;
            left: 2px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: var(--accent-color);
            border: 2px solid var(--white-color);
        }

        .online-indicator.offline {
            background: #9e9e9e;
        }

        /* التجاوب مع الشاشات الصغيرة */
        @media (max-width: 480px) {
            .header {
                padding: 12px 15px;
            }

            .friend-item {
                padding: 10px 12px;
            }

            .friend-avatar {
                width: 45px;
                height: 45px;
                margin-left: 12px;
            }

            .search-container {
                padding: 12px;
            }

            .empty-state {
                padding: 40px 20px;
            }

            .empty-icon {
                font-size: 48px;
            }
        }

        @media (max-width: 360px) {
            .friend-avatar {
                width: 40px;
                height: 40px;
            }

            .friend-name {
                font-size: 15px;
            }

            .header-title {
                font-size: 16px;
            }
        }

        /* تحسينات للشاشات الكبيرة */
        @media (min-width: 768px) {
            .app-container {
                max-width: 500px;
                margin: 0 auto;
                height: 90vh;
                margin-top: 5vh;
                border-radius: 15px;
                overflow: hidden;
                box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            }

            .bottom-nav {
                border-radius: 0 0 15px 15px;
            }
        }

        /* رسالة الترحيب */
        .welcome-message {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white-color);
            padding: 20px;
            text-align: center;
        }

        .welcome-title {
            font-size: 20px;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .welcome-subtitle {
            font-size: 14px;
            opacity: 0.9;
        }

        /* الإشعارات */
        .notification-container {
            position: fixed;
            top: 80px;
            right: 20px;
            z-index: 1000;
            max-width: 300px;
        }

        .notification {
            background: var(--white-color);
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            border-right: 4px solid var(--accent-color);
            animation: slideIn 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
        }

        .notification-icon {
            color: var(--accent-color);
            font-size: 20px;
        }

        .notification-content {
            flex: 1;
        }

        .notification-title {
            font-weight: 500;
            margin-bottom: 5px;
        }

        .notification-message {
            font-size: 14px;
            color: var(--gray-color);
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .notification.fade-out {
            animation: slideOut 0.3s ease forwards;
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        /* مؤشر التحميل */
        .loading {
            display: flex;
            justify-content: center;
            padding: 20px;
            color: var(--gray-color);
        }

        .loading::after {
            content: "جاري التحميل...";
            font-size: 14px;
        }

        /* تأثيرات للرسائل غير المقروءة */
        .pulse {
            animation: pulse 1.5s infinite;
        }

        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(37, 211, 102, 0.4);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(37, 211, 102, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(37, 211, 102, 0);
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- الهيدر -->
        <div class="header">
            <div class="header-content">
                <a href="/profile">
                    <img src="<%= avatarUrl || '/default-avatar.png' %>" alt="البروفايل" class="profile-icon">
                </a>
                <div class="header-title">الأصدقاء</div>
            </div>
            <div class="header-actions">
                <div class="header-icon" id="notificationIcon">
                    <i class="fas fa-bell"></i>
                    <span class="notification-badge" id="notificationBadge" style="display: none;">0</span>
                </div>
                <a href="/users" class="header-icon">
                    <i class="fas fa-user-plus"></i>
                </a>
            </div>
        </div>

        <!-- رسالة الترحيب -->
        <div class="welcome-message">
            <div class="welcome-title">مرحباً <%= username %>! 👋</div>
            <div class="welcome-subtitle">لديك <%= friends.length %> صديق</div>
        </div>

        <!-- شريط البحث -->
        <div class="search-container">
            <div class="search-box">
                <div class="search-icon"><i class="fas fa-search"></i></div>
                <input type="text" class="search-input" placeholder="ابحث عن صديق..." id="searchInput">
            </div>
        </div>

        <!-- محتوى الأصدقاء -->
        <div class="friends-content">
            <% if (friends.length > 0) { %>
                <ul class="friends-list" id="friendsList">
                    <% friends.forEach(friend => { 
                        const isOnline = friend.lastSeen && (Date.now() - new Date(friend.lastSeen).getTime() < 5 * 60 * 1000);
                        const lastSeenTime = friend.lastSeen ? new Date(friend.lastSeen) : new Date();
                        const timeAgo = getTimeAgo(lastSeenTime);
                        const hasUnread = friend.unreadCount > 0;
                    %>
                        <li class="friend-item <%= hasUnread ? 'unread' : '' %>" 
                            data-username="<%= friend.username.toLowerCase() %>" 
                            data-friend-id="<%= friend._id %>">
                            <div class="avatar-container">
                                <img src="<%= friend.avatarUrl || '/default-avatar.png' %>" 
                                     alt="<%= friend.username %>" 
                                     class="friend-avatar"
                                     onerror="this.src='/default-avatar.png'">
                                <div class="online-indicator <%= isOnline ? '' : 'offline' %>"></div>
                            </div>
                            <div class="friend-info">
                                <div class="friend-name"><%= friend.username %></div>
                                <div class="friend-status">
                                    <% if (isOnline) { %>
                                        <div class="status-dot"></div>
                                        <span>متصل الآن</span>
                                    <% } else { %>
                                        <div class="status-dot offline"></div>
                                        <span class="last-seen"><%= timeAgo %></span>
                                    <% } %>
                                </div>
                                <% if (hasUnread) { %>
                                    <div class="friend-time">
                                        <i class="fas fa-envelope" style="color: var(--accent-color); margin-left: 5px;"></i>
                                        <%= friend.unreadCount %> رسالة غير مقروءة
                                    </div>
                                <% } %>
                            </div>
                            <a href="/chat-private/<%= friend._id %>" class="chat-indicator <%= hasUnread ? 'pulse' : '' %>">
                                <i class="fas fa-comment"></i>
                                <% if (hasUnread) { %>
                                    <span class="unread-badge"><%= friend.unreadCount %></span>
                                <% } %>
                            </a>
                        </li>
                    <% }) %>
                </ul>
            <% } else { %>
                <div class="empty-state">
                    <div class="empty-icon"><i class="fas fa-user-friends"></i></div>
                    <div class="empty-title">لا يوجد أصدقاء</div>
                    <div class="empty-description">
                        ابدأ بإضافة أصدقاء جدد للدردشة معهم
                    </div>
                    <a href="/users" class="btn-primary">
                        تصفح المستخدمين
                    </a>
                </div>
            <% } %>
        </div>

        <!-- التنقل السفلي -->
        <div class="bottom-nav">
            <a href="/chat" class="nav-item">
                <span class="nav-icon"><i class="fas fa-comments"></i></span>
                <span class="nav-text">الدردشة</span>
            </a>
            <a href="/" class="nav-item active">
                <span class="nav-icon"><i class="fas fa-user-friends"></i></span>
                <span class="nav-text">الأصدقاء</span>
                <span class="nav-badge" id="friendsBadge" style="display: none;">0</span>
            </a>
            <a href="/users" class="nav-item">
                <span class="nav-icon"><i class="fas fa-search"></i></span>
                <span class="nav-text">المستخدمون</span>
            </a>
            <a href="/friend-requests" class="nav-item">
                <span class="nav-icon"><i class="fas fa-user-plus"></i></span>
                <span class="nav-text">الطلبات</span>
            </a>
            <a href="/profile" class="nav-item">
                <span class="nav-icon"><i class="fas fa-user"></i></span>
                <span class="nav-text">البروفايل</span>
            </a>
        </div>
    </div>

    <!-- حاوية الإشعارات -->
    <div class="notification-container" id="notificationContainer"></div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        // تهيئة Socket.IO
        const socket = io();
        
        // حفظ userId في localStorage
        const userId = '<%= typeof userId !== "undefined" ? userId : "" %>';
        if (userId) {
            localStorage.setItem('userId', userId);
            console.log('✅ User ID saved:', userId);
        }

        // البحث في الوقت الحقيقي
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const friendItems = document.querySelectorAll('.friend-item');
            
            friendItems.forEach(item => {
                const username = item.getAttribute('data-username');
                if (username.includes(searchTerm)) {
                    item.style.display = 'flex';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // تأثير النقر على العناصر
        document.querySelectorAll('.friend-item').forEach(item => {
            item.addEventListener('click', function(e) {
                if (!e.target.closest('.chat-indicator')) {
                    this.style.backgroundColor = '#ebebeb';
                    setTimeout(() => {
                        this.style.backgroundColor = '';
                    }, 200);
                }
            });
        });

        // التركيز على حقل البحث
        document.getElementById('searchInput').focus();

        // تحديث حالة الاتصال تلقائياً
        function updateOnlineStatus() {
            document.querySelectorAll('.friend-item').forEach(item => {
                // يمكن إضافة منطق لتحديث حالة الاتصال هنا
            });
        }

        // تحديث كل 30 ثانية
        setInterval(updateOnlineStatus, 30000);

        // دالة لعرض الإشعارات
        function showNotification(title, message, type = 'info', friendId = null) {
            const notificationContainer = document.getElementById('notificationContainer');
            const notificationId = 'notification-' + Date.now();
            
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.id = notificationId;
            
            let icon = 'fas fa-info-circle';
            if (type === 'success') icon = 'fas fa-check-circle';
            if (type === 'warning') icon = 'fas fa-exclamation-triangle';
            if (type === 'error') icon = 'fas fa-exclamation-circle';
            if (type === 'message') icon = 'fas fa-comment';
            
            notification.innerHTML = `
                <div class="notification-icon">
                    <i class="${icon}"></i>
                </div>
                <div class="notification-content">
                    <div class="notification-title">${title}</div>
                    <div class="notification-message">${message}</div>
                </div>
            `;
            
            // إضافة حدث النقر للإشعار للانتقال إلى المحادثة
            if (friendId) {
                notification.addEventListener('click', function() {
                    window.location.href = `/chat-private/${friendId}`;
                });
            }
            
            notificationContainer.appendChild(notification);
            
            // إزالة الإشعار بعد 5 ثوانٍ
            setTimeout(() => {
                const notif = document.getElementById(notificationId);
                if (notif) {
                    notif.classList.add('fade-out');
                    setTimeout(() => {
                        if (notif.parentNode) {
                            notif.parentNode.removeChild(notif);
                        }
                    }, 300);
                }
            }, 5000);
        }

        // استقبال إشعارات جديدة من السيرفر
        socket.on('new message notification', (data) => {
            console.log('📩 استقبال إشعار رسالة جديدة:', data);
            
            // تحديث عدد الرسائل غير المقروءة للصديق المعين
            const friendItem = document.querySelector(`.friend-item[data-friend-id="${data.fromId}"]`);
            if (friendItem) {
                updateFriendUnreadCount(friendItem, data.unreadCount, data.fromId);
                
                // عرض إشعار بالرسالة الجديدة
                showNotification('رسالة جديدة', `لديك رسالة جديدة من ${data.from}`, 'message', data.fromId);
                
                // تحديث العدد الإجمالي للإشعارات
                updateTotalNotifications();
            } else {
                console.warn('⚠️ لم يتم العثور على صديق بالمعرف:', data.fromId);
            }
        });

        // تحديث عدد الرسائل غير المقروءة لصديق معين
        function updateFriendUnreadCount(friendItem, unreadCount, friendId) {
            console.log(`🔄 تحديث عدد الرسائل غير المقروءة لـ ${friendId}: ${unreadCount}`);
            
            const chatIndicator = friendItem.querySelector('.chat-indicator');
            const existingBadge = chatIndicator.querySelector('.unread-badge');
            const friendInfo = friendItem.querySelector('.friend-info');
            
            // تحديث أو إضافة شارة الرسائل غير المقروءة
            if (unreadCount > 0) {
                if (existingBadge) {
                    existingBadge.textContent = unreadCount;
                } else {
                    const newBadge = document.createElement('span');
                    newBadge.className = 'unread-badge';
                    newBadge.textContent = unreadCount;
                    chatIndicator.appendChild(newBadge);
                }
                
                // إضافة فئة unread للعنصر
                friendItem.classList.add('unread');
                
                // إضافة تأثير النبض
                chatIndicator.classList.add('pulse');
                
                // إضافة نص الرسائل غير المقروءة
                let unreadText = friendInfo.querySelector('.friend-time');
                if (!unreadText) {
                    unreadText = document.createElement('div');
                    unreadText.className = 'friend-time';
                    friendInfo.appendChild(unreadText);
                }
                unreadText.innerHTML = `<i class="fas fa-envelope" style="color: var(--accent-color); margin-left: 5px;"></i> ${unreadCount} رسالة غير مقروءة`;
            } else {
                // إزالة شارة الرسائل غير المقروءة
                if (existingBadge) {
                    existingBadge.remove();
                }
                
                // إزالة فئة unread للعنصر
                friendItem.classList.remove('unread');
                
                // إزالة تأثير النبض
                chatIndicator.classList.remove('pulse');
                
                // إزالة نص الرسائل غير المقروءة
                const unreadText = friendInfo.querySelector('.friend-time');
                if (unreadText) {
                    unreadText.remove();
                }
            }
        }

        // تحديث العدد الإجمالي للإشعارات
        function updateTotalNotifications() {
            const unreadBadges = document.querySelectorAll('.unread-badge');
            let totalUnread = 0;
            
            unreadBadges.forEach(badge => {
                totalUnread += parseInt(badge.textContent) || 0;
            });
            
            const notificationBadge = document.getElementById('notificationBadge');
            const friendsBadge = document.getElementById('friendsBadge');
            
            if (totalUnread > 0) {
                notificationBadge.textContent = totalUnread > 99 ? '99+' : totalUnread;
                notificationBadge.style.display = 'flex';
                
                friendsBadge.textContent = totalUnread > 99 ? '99+' : totalUnread;
                friendsBadge.style.display = 'flex';
                
                console.log(`🔔 العدد الإجمالي للرسائل غير المقروءة: ${totalUnread}`);
            } else {
                notificationBadge.style.display = 'none';
                friendsBadge.style.display = 'none';
            }
        }

        // تحديث العدد الإجمالي للإشعارات عند التحميل
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 صفحة الأصدقاء جاهزة');
            updateTotalNotifications();
            
            // تحديث عدد الرسائل غير المقروءة فور تحميل الصفحة
            updateUnreadCounts();
        });

        // تحديث حالة القراءة عند زيارة صفحة الدردشة
        document.querySelectorAll('.chat-indicator').forEach(link => {
            link.addEventListener('click', function(e) {
                const friendItem = this.closest('.friend-item');
                const friendId = friendItem.getAttribute('data-friend-id');
                
                console.log(`📝 تحديث حالة القراءة للصديق: ${friendId}`);
                
                // تحديث حالة الرسائل كمقروءة
                fetch(`/mark-as-read/${friendId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log(`✅ تم تحديث حالة الرسائل كمقروءة لـ ${friendId}`);
                        
                        // إزالة شارة الرسائل غير المقروءة
                        updateFriendUnreadCount(friendItem, 0, friendId);
                        
                        // تحديث العدد الإجمالي للإشعارات
                        updateTotalNotifications();
                    } else {
                        console.error('❌ فشل في تحديث حالة القراءة:', data.message);
                    }
                })
                .catch(error => {
                    console.error('❌ خطأ في تحديث حالة القراءة:', error);
                });
            });
        });

        // تحديث عدد الرسائل غير المقروءة بشكل دوري
        function updateUnreadCounts() {
            console.log('🔄 تحديث عدد الرسائل غير المقروءة...');
            
            document.querySelectorAll('.friend-item').forEach(item => {
                const friendId = item.getAttribute('data-friend-id');
                
                fetch(`/unread-count/${friendId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const unreadCount = data.unreadCount;
                            console.log(`📊 عدد الرسائل غير المقروءة لـ ${friendId}: ${unreadCount}`);
                            updateFriendUnreadCount(item, unreadCount, friendId);
                            
                            // تحديث العدد الإجمالي للإشعارات
                            updateTotalNotifications();
                        } else {
                            console.error('❌ فشل في جلب عدد الرسائل غير المقروءة:', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('❌ خطأ في جلب عدد الرسائل غير المقروءة:', error);
                    });
            });
        }

        // تحديث عدد الرسائل غير المقروءة كل 30 ثانية
        setInterval(updateUnreadCounts, 30000);

        // تحسين تجربة المستخدم على الأجهزة التي تعمل باللمس
        document.addEventListener('touchstart', function() {}, {passive: true});

        // إضافة نمط للزر الأساسي
        const style = document.createElement('style');
        style.textContent = `
            .btn-primary {
                display: inline-block;
                background: var(--primary-color);
                color: var(--white-color);
                padding: 12px 24px;
                border-radius: 25px;
                text-decoration: none;
                font-weight: 500;
                margin-top: 10px;
                transition: background-color 0.3s;
            }
            .btn-primary:hover {
                background: var(--secondary-color);
            }
        `;
        document.head.appendChild(style);

        // فحص حالة الاتصال بالسوكيت
        socket.on('connect', () => {
            console.log('✅ متصل بالسيرفر عبر Socket.IO');
        });

        socket.on('disconnect', () => {
            console.log('❌ انقطع الاتصال بالسيرفر');
        });

        socket.on('connect_error', (error) => {
            console.error('❌ خطأ في الاتصال بالسيرفر:', error);
        });

        // استقبال رسالة خاصة مباشرة
        socket.on('private message', (data) => {
            console.log('📩 استقبال رسالة خاصة مباشرة:', data);
            
            // تحديث عدد الرسائل غير المقروءة للصديق المرسل
            const friendItem = document.querySelector(`.friend-item[data-friend-id="${data.userId}"]`);
            if (friendItem) {
                // زيادة عدد الرسائل غير المقروءة بمقدار 1
                const existingBadge = friendItem.querySelector('.unread-badge');
                let currentCount = 0;
                
                if (existingBadge) {
                    currentCount = parseInt(existingBadge.textContent) || 0;
                }
                
                const newCount = currentCount + 1;
                updateFriendUnreadCount(friendItem, newCount, data.userId);
                
                // عرض إشعار بالرسالة الجديدة
                showNotification('رسالة جديدة', `لديك رسالة جديدة من ${data.username}`, 'message', data.userId);
                
                // تحديث العدد الإجمالي للإشعارات
                updateTotalNotifications();
            }
        });
    </script>
</body>
</html>