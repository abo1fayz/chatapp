<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>إنشاء حساب جديد</title>
  <style>
    :root {
      --primary-color: #075e54;
      --secondary-color: #128c7e;
      --accent-color: #25d366;
      --light-color: #f8f9fa;
      --dark-color: #333;
      --gray-color: #666;
      --border-radius: 16px;
      --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body {
      height: 100%;
      width: 100%;
      overflow-x: hidden;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      direction: rtl;
      line-height: 1.5;
      padding: 16px;
    }

    .container {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      padding: 20px;
      width: 100%;
      max-width: 400px;
      text-align: center;
      animation: fadeIn 0.6s ease-out;
    }

    h2 {
      color: var(--primary-color);
      margin-bottom: 8px;
      font-weight: 600;
      font-size: 22px;
    }

    .welcome-text {
      color: var(--gray-color);
      margin-bottom: 20px;
      font-size: 15px;
    }

    .message {
      background: #ffeaa7;
      color: #e17055;
      padding: 12px;
      border-radius: 10px;
      margin-bottom: 16px;
      font-size: 14px;
      border-right: 4px solid #e17055;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    .input-group {
      position: relative;
    }

    input[type="password"] {
      width: 100%;
      padding: 14px 16px;
      border: 2px solid #e0e0e0;
      border-radius: var(--border-radius);
      font-size: 16px;
      outline: none;
      transition: all 0.3s ease;
      background-color: var(--light-color);
    }

    input[type="password"]:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(7, 94, 84, 0.1);
    }

    .file-input-container {
      position: relative;
      display: inline-block;
      width: 100%;
    }

    .file-input-label {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      padding: 14px 16px;
      background: var(--light-color);
      border: 2px dashed var(--primary-color);
      border-radius: var(--border-radius);
      color: var(--primary-color);
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .file-input-label:hover {
      background: var(--primary-color);
      color: white;
    }

    input[type="file"] {
      position: absolute;
      left: -9999px;
      opacity: 0;
    }

    .avatar-preview {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      margin: 12px auto;
      object-fit: cover;
      border: 3px solid var(--primary-color);
      box-shadow: var(--shadow);
      display: none;
      animation: zoomIn 0.4s ease-out;
    }

    button {
      background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
      color: white;
      border: none;
      padding: 15px 20px;
      border-radius: var(--border-radius);
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(37, 211, 102, 0.3);
      margin-top: 8px;
    }

    button:hover {
      background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(37, 211, 102, 0.4);
    }

    button:active {
      transform: translateY(0);
    }

    .user-info {
      background: var(--light-color);
      padding: 12px;
      border-radius: 12px;
      margin-bottom: 16px;
      border-right: 4px solid var(--primary-color);
    }

    .username-display {
      color: var(--primary-color);
      font-weight: 600;
      font-size: 17px;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes zoomIn {
      from {
        opacity: 0;
        transform: scale(0.8);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    .file-info {
      font-size: 12px;
      color: var(--gray-color);
      margin-top: 5px;
    }

    /* تحسينات للتفاعل مع اللمس */
    button, .file-input-label {
      -webkit-tap-highlight-color: transparent;
    }

    /* تحسينات إضافية للجوال */
    input[type="password"] {
      -webkit-appearance: none;
      appearance: none;
    }

    /* تحسينات للشاشات الصغيرة جداً */
    @media (max-width: 480px) {
      body {
        padding: 12px;
        align-items: flex-start;
      }
      
      .container {
        padding: 18px 14px;
        margin: 0;
      }
      
      h2 {
        font-size: 20px;
      }
      
      .welcome-text {
        font-size: 14px;
        margin-bottom: 16px;
      }
      
      input[type="password"] {
        padding: 12px 14px;
        font-size: 15px;
      }
      
      .file-input-label {
        padding: 12px 14px;
        font-size: 14px;
      }
      
      button {
        padding: 14px 16px;
        font-size: 15px;
      }
      
      .avatar-preview {
        width: 90px;
        height: 90px;
      }
      
      form {
        gap: 14px;
      }
    }

    @media (max-width: 360px) {
      .container {
        padding: 16px 12px;
      }
      
      h2 {
        font-size: 18px;
      }
      
      .username-display {
        font-size: 16px;
      }
      
      .message {
        font-size: 13px;
        padding: 10px;
      }
    }

    /* تحسينات للشاشات الصغيرة جداً في الوضع الأفقي */
    @media (max-height: 500px) {
      body {
        align-items: flex-start;
        padding-top: 10px;
        padding-bottom: 10px;
      }
      
      .container {
        max-height: 100vh;
        overflow-y: auto;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>مرحبًا <span class="username-display" id="usernameDisplay">مستخدم</span>! ✨</h2>
    <p class="welcome-text">اختر كلمة مرورك وأضف صورة شخصية</p>

    <div id="messageContainer" class="message" style="display: none;"></div>

    <div class="user-info">
      <div>اسم المستخدم:</div>
      <div class="username-display" id="usernameInfo">مستخدم</div>
    </div>

    <form id="registerForm" enctype="multipart/form-data">
      <div class="input-group">
        <input type="password" name="password" id="password" placeholder="كلمة المرور الجديدة" required minlength="4">
      </div>

      <div class="file-input-container">
        <label for="avatarInput" class="file-input-label">
          📸 اختر صورة شخصية
        </label>
        <input type="file" name="avatar" accept="image/*" id="avatarInput" required>
        <div class="file-info">PNG, JPG - الحد الأقصى 5MB</div>
      </div>

      <img class="avatar-preview" id="avatarPreview">

      <button type="submit">إنشاء الحساب</button>
    </form>
  </div>

  <script>
    // بيانات افتراضية (في التطبيق الحقيقي ستأتي من الخادم)
    const username = "مستخدم جديد";
    
    // تعيين اسم المستخدم
    document.getElementById('usernameDisplay').textContent = username;
    document.getElementById('usernameInfo').textContent = username;

    const form = document.getElementById('registerForm');
    const input = document.getElementById('avatarInput');
    const preview = document.getElementById('avatarPreview');
    const messageContainer = document.getElementById('messageContainer');
    
    // معالجة اختيار الصورة
    input.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        // التحقق من حجم الملف (5MB كحد أقصى)
        if (file.size > 5 * 1024 * 1024) {
          showMessage('حجم الملف كبير جدًا. الرجاء اختيار صورة أقل من 5MB', 'error');
          input.value = '';
          return;
        }

        const reader = new FileReader();
        reader.onload = () => {
          preview.src = reader.result;
          preview.style.display = 'block';
        }
        reader.readAsDataURL(file);
      }
    });

    // معالجة إرسال النموذج
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const password = document.getElementById('password').value;
      const avatarFile = input.files[0];
      
      // التحقق من صحة البيانات
      if (password.length < 4) {
        showMessage('كلمة المرور يجب أن تكون 4 أحرف على الأقل', 'error');
        return;
      }
      
      if (!avatarFile) {
        showMessage('الرجاء اختيار صورة شخصية', 'error');
        return;
      }
      
      // هنا يمكنك إرسال البيانات إلى الخادم
      // simulateFormSubmission(password, avatarFile);
      
      showMessage('تم إنشاء الحساب بنجاح!', 'success');
      
      // إعادة تعيين النموذج بعد تأكيد النجاح
      setTimeout(() => {
        form.reset();
        preview.style.display = 'none';
        showMessage('', 'success', true); // إخفاء الرسالة
      }, 2000);
    });

    // دالة لعرض الرسائل
    function showMessage(message, type, hide = false) {
      if (hide) {
        messageContainer.style.display = 'none';
        return;
      }
      
      messageContainer.textContent = message;
      messageContainer.style.display = 'block';
      
      if (type === 'error') {
        messageContainer.style.background = '#ffeaa7';
        messageContainer.style.color = '#e17055';
        messageContainer.style.borderRight = '4px solid #e17055';
      } else if (type === 'success') {
        messageContainer.style.background = '#d4edda';
        messageContainer.style.color = '#155724';
        messageContainer.style.borderRight = '4px solid #155724';
      }
    }

    // محاكاة إرسال النموذج إلى الخادم
    function simulateFormSubmission(password, avatarFile) {
      // في التطبيق الحقيقي، هنا ستستخدم fetch أو XMLHttpRequest
      // لإرسال البيانات إلى الخادم
      
      const formData = new FormData();
      formData.append('password', password);
      formData.append('avatar', avatarFile);
      
      // مثال باستخدام fetch:
      /*
      fetch('/register', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showMessage('تم إنشاء الحساب بنجاح!', 'success');
        } else {
          showMessage(data.message || 'حدث خطأ أثناء إنشاء الحساب', 'error');
        }
      })
      .catch(error => {
        showMessage('حدث خطأ في الاتصال بالخادم', 'error');
      });
      */
    }
  </script>
</body>
</html>
